#! /usr/bin/env python
#
# ROS Node and HMI Client of Kaldi Gstreamer App

# System imports
import os
import sys

# Gstreamer imports
import gi
gi.require_version('Gst', '1.0')
from gi.repository import GLib, GObject, Gst

# ROS imports
import rospy

# Speech recognition
from speech_recognition.hmi_server_kaldi_client import HMIServerKaldiClient


if __name__ == "__main__":
    # TODO Move to KaldiGstApp class definition
    try:
        kaldi_root = os.environ['KALDI_ROOT']
    except:
        sys.exit("Environment variable KALDI_ROOT unset")

    try:
        gst_plugin_path = os.environ['GST_PLUGIN_PATH']
    except:
        sys.exit("GST_PLUGIN_PATH is unset. Kaldi gst-plugin not in path")
    else:
        kaldi_gst_plugin_path = os.path.join(kaldi_root, "src/gst-plugin")

        if not kaldi_gst_plugin_path in gst_plugin_path:
            sys.exit("Kaldi gst-plugin is not in GST_PLUGIN_PATH")

    # Initialize gstreamer library using threads
    GObject.threads_init()
    Gst.init(sys.argv)

    # Start the rosnode and create the HMI Server/Kaldi Client
    rospy.init_node('hmi_server_kaldi_client')
    rospy.loginfo("Creating HMIServerKaldiClient")
    c = HMIServerKaldiClient()

    # Run the GLib main loop. This makes sure the messages on the bus are handled, which is required for neatly stopping
    # gstreamer
    rospy.loginfo("Starting GLib main loop")
    try:
        GLib.MainLoop().run()
    except KeyboardInterrupt:
        pass

    # Signal rospy to shutdown to cleanly destruct the HMI server and action servers therein
    rospy.signal_shutdown("Main loop is done")
